# ----- init
sudo apt install && sudo apt upgrade -y
sudo apt update

# power off
# sudo poweroff -p

# ----- ssh
sudo apt install openssh-server -y

# wget pub ssh key
mkdir -p ~/.ssh
# echo key >> ~/.ssh/authorized_keys
# echo ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDU8/7svQBc8AjU5ZVTVHkU9Jvo1cplecfzSqRpgpdAJ71+KTfkgt1IYIxtvPcKtHPCQK09BNq4QOaJHHk1KNDYPteQjLN/MUq/IJcpcluR7hTqMomJrPU2s/tQgpAiIjo2Wck1qJC/F9YKzz8LfYnJ2eUGsM8yN9otDa5IYhG8unQAUynmJNEc6el56EMgpOoK7+GzoZSCHTcpi5yYlKMzKOgqMejfVJvFNkSVMXUDpwQ9M2kL9QxFcVnaJKc+C+2eFEJfknVkqWcWIBYp6i3DT5J9DsjAVYNUoH4srV0+rcIZYANydtf2nMTgbL4tiN+NACqnuvQ7tbtMpdUNQ/i/TRxKlinBudbR/xNlD2zy4qmeSpIMcPrzDSrfb2CJ5WqnLZ57ZZMkVtLrvtbDVPhaGgkQ3tFJNq9Jv6LGUrG3KgwsZi7ailBDyg7pfUd4uhuS/2JHLosPwh6WL2xSTdfErLZn2YvwEf+4Pe24WTErKyeHzpd2PxGIKAsRT/K2s0E= m@zBook >> ~/.ssh/authorized_keys
chmod -R go= ~/.ssh

# allow pub keys
sudo nano /etc/ssh/sshd_config
sudo ufw allow ssh
sudo systemctl restart ssh

# ----- monitoring tool
sudo apt install ncdu -y
sudo apt install htop -y

# extra
sudo apt install net-tools nmap -y
sudo apt install nmap -y

sudo apt install gcc -y
sudo apt install cmake -y
sudo apt install perl -y
sudo apt install yasm -y
sudo apt install build-essential -y
sudo apt install golang -y
curl https://sh.rustup.rs -sSf | sh

# ----- ntp
sudo apt install ntp -y
# check status
ntpq -p

# ----- xrdp
sudo apt install xrdp -y
sudo adduser xrdp ssl-cert
sudo systemctl enable xrdp
sudo ufw allow 3389
sudo systemctl restart xrdp

# ----- docker
sudo apt install docker.io -y

# ----- python
sudo apt -y install python3-pip

# ----- miniconda
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
chmod +x ~/Miniconda3-latest-Linux-x86_64.sh
sudo ~/Miniconda3-latest-Linux-x86_64.sh

conda config --set auto_activate_base false

# ----- lean
sudo apt install python3-tk -y

pip3 install cython

pip3 install lean
source ~/.profile

pip3 install websocket-client

conda install pandas -y
conda install matplotlib -y
conda install sqlalchemy -y
conda install -c conda-forge web3 -y
#pip3 install web3

# ----- useful commands
# folder summary size on disk
du -hs ~/ 
df -h

# firewall open port
sudo ufw allow 22
sudo iptables -L

# execution rights
sudo chmod +x /some/file

# listening ports
netstat -ntlp | grep LISTEN

# check opened ports
nmap -sT 192.168.1.3

"~/.wine/drive_c/Program Files/MetaTrader 5 Strategy Tester/MetaTester64.exe"
sudo apt install xfce4
sudo update-alternatives --config x-session-manager

# open port
iptables -A INPUT -p tcp --dport 80 -j ACCEPT
sudo iptables -L

# ipfs
# sudo docker run --detach --restart=unless-stopped -p 4001:4001 -p 5001:5001 -p 8080:8080 ipfs/go-ipfs
sudo docker run -d --name ipfs_host -v /data/ipfs/staging:/export -v /data/ipfs/data:/data/ipfs -p 4001:4001 -p 4001:4001/udp -p 127.0.0.1:8080:8080 -p 127.0.0.1:5001:5001 ipfs/kubo:latest
sudo docker exec -ti postgres_application-db_1 psql -U postgres
psql postgresql://postgres:postgres@localhost:5433/graph-node

cargo run -p graph-node --release -- \
  --postgres-url postgresql://postgres:postgres@localhost:5432/graph-node \
  --ethereum-rpc gnosis::127.0.0.1:8548 \
  --ipfs 127.0.0.1:5001

cargo run -p graph-node --release -- \
  --postgres-url postgresql://postgres:postgres@localhost:5432/graph-node \
  --ethereum-rpc gnosis:127.0.0.1:8548 \
  --ipfs https://ipfs.network.thegraph.com

curl --url http://192.168.1.82:8548 \
-X POST \
-H "Content-Type: application/json" \
-d '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}'

# extend LVM
sudo -i
# enumerate devices
sudo lsblk
# create PV on specified device
pvcreate /dev/...
# extend VG (vgscan)
vgextend vg-name /dev/...
lvextend -l +100%FREE /dev/vg-name/lv-name
lvdisplay
# check available space
df -hT
# extend file system
resize2fs /dev/vg-name/lv-name
# check available space again, it should be greater
df -hT

# add mount point
sudo nano /etc/fstab
# /dev/ssd-vg/ssd-lv /data ext4 defaults 0 1
# remount /etc/fstab
sudo mount -a

#venv
mkdir myproj && cd myproj

conda create -n test_env python=3.10
conda activate test_env
conda install -n test_env <pkg>
conda deactivate

python -m venv env
source env/bin/activate